x-buildkit-config: &buildkit
  build:
    args:
      BUILDKIT_INLINE_CACHE: 1
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    context: .

services:
  app:
    <<: *buildkit
    build:
      context: .
      dockerfile: services/webui/Dockerfile
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7766/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "7766:7766"
    volumes:
      - ./config:/app/config:ro
      - ./data:/data
      - ./models:/app/models:ro
      - ./input:/app/input
      - ./output:/app/output
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONPATH=/app/services/shared:/app/services
    command: ["python", "services/webui/webui.py"]
    restart: unless-stopped
  websocket:
    <<: *buildkit
    build:
      context: .
      dockerfile: services/websocket/Dockerfile
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "8765:8765"
    volumes:
      - ./data:/data
    environment:
      - PYTHONPATH=/app/services/shared:/app/services
    command: ["python", "services/websocket/websocket_server.py"]
    restart: unless-stopped
  speciesid:
    <<: *buildkit
    build:
      context: .
      dockerfile: services/speciesid/Dockerfile
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[p]ython.*speciesid.py' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./config:/app/config:ro
      - ./data:/data
      - ./models:/app/models:ro
      - ./models/model.tflite:/app/model.tflite:ro
    environment:
      - PYTHONPATH=/app/services/shared:/app/services
    command: ["python", "services/speciesid/speciesid.py"]
    restart: unless-stopped
    depends_on:
      - websocket

  frontend:
    build:
      context: ./frontend
    networks:
      - app_network
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_vite_cache:/app/.vite
    environment:
      - NODE_ENV=development
    command: npm run dev -- --host
    restart: unless-stopped
    depends_on:
      - app
      - websocket

volumes:
  frontend_node_modules:
  frontend_vite_cache:

networks:
  app_network:
    name: app_network
